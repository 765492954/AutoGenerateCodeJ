package ${package}.${moduleName}.controller;



import com.jkd.common.message.ResponseMessage;
import com.jkd.common.query.BaseQuery;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.AllArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import javax.validation.Valid;
import com.jkd.service.*;
import com.jkd.query.${voPackageName}.*;
/**
 * <p>
 * ${comments}
 * </p>
 *
 * @package:  ${package}.${moduleName}.controller
 * @description: ${comments}
 * @author: ${author}
 * @date: Created in ${datetime}
 * @copyright: Copyright (c) ${year}
 * @version: V1.0
 * @modified: ${author}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/${pathName}")
@Api( tags = {"${comments}"})
public class ${className}Controller {

    private final ${className}Service ${classname}Service;

    /**
     * 分页查询${comments}
     * @param ${classname} ${comments}
     * @return ResponseMessage
     */
    @GetMapping("${classname}s")
    @ApiOperation(value = "分页查询${comments} (select${className})", notes = "GET")
    public ResponseMessage list${className}(@Valid @ModelAttribute  Select${className}Query ${classname}) {
      return  ${classname}Service.select${className}(${classname});
    }

##    /**
##     * 单个查询${comments}
##     * @param ${classname} ${comments}
##     * @return ResponseMessage
##     */
##    @GetMapping("${classname}")
##    @ApiOperation(value = "单个查询${comments} (get${className}s)", notes = "GET")
##    public ResponseMessage get${className}(@Valid @ModelAttribute ${className} ${classname}) {
##        return  ${classname}Service.select${className}(${classname}));
##    }

    @PostMapping("${classname}")
    @ApiOperation(value = "创建${comments}(insert${className})",notes = "POST")
    public ResponseMessage insertMenu(@Valid @ModelAttribute Insert${className}Query request){
        ResponseMessage respons = ${classname}Service.insert${className}(request);
        return respons;
    }

    @PutMapping("${classname}")
    @ApiOperation(value = "单独修改${comments}(update${className})",notes = "Put")
    public ResponseMessage update${className}(@Valid @ModelAttribute Update${className}Query request){
        ResponseMessage respons = ${classname}Service.update${className}(request);
        return respons;
    }

    @DeleteMapping("role")
    @ApiOperation(value = "单独删除一个角色，暂不可用(delete${className})", notes = "Delete")
    public ResponseMessage delete${className}(@Valid @ModelAttribute Delete${className}Query request) {
        ResponseMessage respons = ${classname}Service.delete${className}(request);
        return respons;
    }


}
